// –ü–æ–ª–æ–∂–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ static/chat/chat.js (–∑–∞–º–µ–Ω–∏—Ç–µ —Å—Ç–∞—Ä—ã–π)
const webhookUrl = "https://n8n.ainewage.ru/webhook/user-message";

const messagesDiv = document.getElementById("messages");
const input = document.getElementById("messageInput");
const sendBtn = document.getElementById("sendBtn");
const newBtn = document.getElementById("newBtn");

let dialogueId = (crypto && crypto.randomUUID) ? crypto.randomUUID() : `id-${Date.now()}-${Math.random().toString(16).slice(2)}`;

// —É—Ç–∏–ª–∏—Ç—ã
function scrollToBottom() {
  messagesDiv.scrollTop = messagesDiv.scrollHeight;
}

function createBubble(text = "", role = "assistant") {
  const el = document.createElement("div");
  el.className = `message ${role}`;
  el.textContent = text;
  return el;
}

function showTypingIndicator() {
  const wrap = document.createElement("div");
  wrap.className = "message assistant";
  const typing = document.createElement("div");
  typing.className = "typing";
  // three dots
  for (let i = 0; i < 3; i++) {
    const dot = document.createElement("span");
    typing.appendChild(dot);
  }
  wrap.innerHTML = "";
  wrap.appendChild(typing);
  messagesDiv.appendChild(wrap);
  scrollToBottom();
  return wrap;
}

function removeElement(el) { if (el && el.parentNode) el.parentNode.removeChild(el); }

// –æ—Å–Ω–æ–≤–Ω–æ–π typing ‚Äî –ø–µ—á–∞—Ç–∞–µ—Ç text –≤ bubble –ø–æ –±—É–∫–≤–∞–º
function typeTextIntoBubble(text, bubble, {minDelay=18, maxDelay=36, jitter=0.2} = {}) {
  return new Promise(resolve => {
    let i = 0;
    bubble.textContent = ""; // –Ω–∞—á–∞—Ç—å —Å –ø—É—Å—Ç–æ–≥–æ
    const t = () => {
      if (i < text.length) {
        // append next character
        bubble.textContent += text[i];
        i++;
        // —Å–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –±–æ–ª–µ–µ –∂–∏–≤–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
        const delay = Math.floor(minDelay + Math.random() * (maxDelay - minDelay));
        setTimeout(t, delay);
        scrollToBottom();
      } else {
        resolve();
      }
    };
    t();
  });
}

// –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–µ–∑ –∑–∞–¥–µ—Ä–∂–∫–∏)
function appendUserMessage(text) {
  const b = createBubble(text, "user");
  messagesDiv.appendChild(b);
  scrollToBottom();
}

// –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞: —Å–Ω–∞—á–∞–ª–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä, –∑–∞—Ç–µ–º –ø–µ—á–∞—Ç—å
async function appendAssistantResponseText(text) {
  const indicator = showTypingIndicator();
  // –Ω–µ–±–æ–ª—å—à–∞—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–µ—á–∞—Ç–∏ (—á—Ç–æ–±—ã –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —É—Å–ø–µ–ª –ø–æ—è–≤–∏—Ç—å—Å—è)
  await new Promise(r => setTimeout(r, 350));
  removeElement(indicator);

  // —Å–æ–∑–¥–∞—ë–º —Ä–µ–∞–ª—å–Ω—É—é –±–æ–±–ª—É
  const bubble = createBubble("", "assistant");
  messagesDiv.appendChild(bubble);
  scrollToBottom();

  // "–ø–µ—á–∞—Ç–∞–µ–º" —Ç–µ–∫—Å—Ç
  await typeTextIntoBubble(text, bubble);
  scrollToBottom();
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
async function sendMessage() {
  const text = input.value.trim();
  if (!text) return;
  // –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É/–∏–Ω–ø—É—Ç –Ω–∞ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏
  sendBtn.disabled = true;
  input.disabled = true;

  appendUserMessage(text);
  input.value = "";

  try {
    const resp = await fetch(webhookUrl, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        user_id: "user123",
        dialogue_id: dialogueId,
        message: text
      })
    });

    // –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON —Å –ø–æ–ª–µ–º response
    let data;
    try {
      data = await resp.json();
    } catch (e) {
      data = { response: "–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞" };
    }

    const reply = (data && (data.response || data.reply || data.message)) || "–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –±–æ—Ç–∞";
    await appendAssistantResponseText(reply);
  } catch (err) {
    console.error(err);
    await appendAssistantResponseText("–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  } finally {
    sendBtn.disabled = false;
    input.disabled = false;
    input.focus();
  }
}

// –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥
function newDialogue() {
  dialogueId = (crypto && crypto.randomUUID) ? crypto.randomUUID() : `id-${Date.now()}-${Math.random().toString(16).slice(2)}`;
  messagesDiv.innerHTML = "";
  appendAssistantResponseText("üîÑ –ù–æ–≤—ã–π –¥–∏–∞–ª–æ–≥ –Ω–∞—á–∞—Ç");
}

// —Å–æ–±—ã—Ç–∏—è
sendBtn.addEventListener("click", sendMessage);
newBtn.addEventListener("click", newDialogue);

// –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ Enter
input.addEventListener("keydown", (e) => {
  if (e.key === "Enter" && !e.shiftKey) {
    e.preventDefault();
    sendMessage();
  }
});

// –Ω–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
window.addEventListener("load", () => {
  appendAssistantResponseText("–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é. –ù–∞–ø–∏—à–∏ –ø–∞—Ä—É —Å–ª–æ–≤ –æ —Å–µ–±–µ ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–∞–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã —Ç–µ–±–µ –Ω—Ä–∞–≤—è—Ç—Å—è.");
  input.focus();
});

window.addEventListener("beforeunload", function (e) {
  if (messagesDiv && messagesDiv.children.length > 0) {
    // —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è –±—Ä–∞—É–∑–µ—Ä–æ–º
    e.preventDefault();
    e.returnValue = "–í–∞—à –¥–∏–∞–ª–æ–≥ –±—É–¥–µ—Ç —É–¥–∞–ª—ë–Ω. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∫–∏–Ω—É—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É?";
    return e.returnValue;
  }
});