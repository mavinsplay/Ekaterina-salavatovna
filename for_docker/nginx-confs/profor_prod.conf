# HTTP -> redirect to HTTPS + ACME webroot + static
server {
    listen 80;
    listen [::]:80;
    server_name careerpiter.ru www.careerpiter.ru;

    # ACME webroot — certbot будет использовать этот путь (/var/www/letsencrypt внутри контейнера)
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
        try_files $uri =404;
        access_log off;
        log_not_found off;
        default_type "text/plain";
    }

    # Отдача статики по HTTP (опционально)
    location /static/ {
        alias /profor/static/;
        expires 7d;
        add_header Cache-Control "public" always;
    }

    # Redirect all other HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }

    access_log /var/log/nginx/access_http_profor.log;
    error_log /var/log/nginx/error_http_profor.log;
}

# HTTPS
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;                         # включаем HTTP/2 (не использовать deprecated listen ... http2)
    server_name careerpiter.ru www.careerpiter.ru;

    ssl_certificate /etc/letsencrypt/live/careerpiter.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/careerpiter.ru/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/careerpiter.ru/chain.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_ecdh_curve secp384r1;

    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;

    client_max_body_size 50G;
    client_body_buffer_size 10M;
    client_body_timeout 7200s;
    send_timeout 7200s;

    keepalive_timeout 300;
    keepalive_requests 100;
    reset_timedout_connection on;

    proxy_read_timeout 7200s;
    proxy_connect_timeout 7200s;
    proxy_send_timeout 7200s;
    proxy_request_buffering off;
    proxy_buffering off;

    proxy_buffer_size 512k;
    proxy_buffers 8 512k;
    proxy_busy_buffers_size 1024k;
    proxy_temp_file_write_size 512k;

    # --- Основной прокси на Django ---
    location / {
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE" always;
        add_header Access-Control-Allow-Headers "Authorization,Content-Type,Range" always;
        add_header Access-Control-Max-Age 1728000 always;

        if ($request_method = OPTIONS) {
            add_header Content-Type "text/plain; charset=utf-8" always;
            add_header Content-Length 0 always;
            return 204;
        }

        # Важно: здесь используем имя сервиса из docker-compose
        # Вариант A (рекомендуемый): у вас в compose сервис называется profor_django -> используем его
        proxy_pass http://profor_django:8000;

        # Вариант B: если вы хотите обращаться к upstream 'profor' (короткое имя),
        # добавьте alias: ["profor"] в docker-compose (см. ниже). Тогда можно
        # использовать proxy_pass http://profor:8000;
        # proxy_pass http://profor:8000;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        access_log /var/log/nginx/profor_proxy_access.log;
        error_log /var/log/nginx/profor_proxy_error.log;
    }

    # Static files (served directly by nginx)
    location /static/ {
        alias /profor/static/;
        expires 7d;
        add_header Cache-Control "public" always;
    }

    # Protected media via internal proxy to django
    location /media/protected/ {
        internal;
        proxy_pass http://profor_django:8000;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_max_temp_file_size 4096m;
    }

    # Public media files
    location /media/ {
        alias /profor/media/;
        types {
            application/vnd.apple.mpegurl m3u8;
            video/mp2t ts;
        }
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Headers "Range,Content-Type" always;
        add_header Access-Control-Allow-Methods "GET,OPTIONS" always;
        add_header Cache-Control "no-cache" always;
    }

    error_log /var/log/nginx/profor_error.log info;
    access_log /var/log/nginx/profor_access.log;
}
